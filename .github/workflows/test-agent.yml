# Copyright 2020 New Relic Corporation. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

name: test-pull-request

#
# Controls when the action will run. 
#
on:
  #
  # Triggers the workflow on push or pull request events but only for listed branches
  #
  push:
    branches: 
      - main
      - 'dev'
  pull_request:
    branches: 
      - main
      - 'dev'
      - 'oapi'
jobs:
  daemon-unit-tests:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: newrelic/nr-php-agent-builder
      IMAGE_TAG: make-go
      IMAGE_VERSION: v1
    strategy:
      matrix:
        platform: [gnu, musl]
        arch: [amd64, arm64]
    steps:
      - name: Checkout newrelic-php-agent code
        uses: actions/checkout@v3
        with:
          path: php-agent
      - name: Enable arm64 emulation
        if: ${{ matrix.arch == 'arm64' }}
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:${{vars.BINFMT_IMAGE_VERSION}}
          platforms: arm64
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build daemon
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{ matrix.platform }}-$IMAGE_VERSION daemon
      - name: Run daemon tests
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{ matrix.platform }}-$IMAGE_VERSION daemon_test
  agent-unit-test:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: newrelic/nr-php-agent-builder
      IMAGE_TAG: make-php
      IMAGE_VERSION: v1
    strategy:
      matrix:
        platform: [gnu, musl]
        arch: [amd64, arm64]
        php: ['5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2']
        exclude:
          - arch: arm64
            php: '5.5'
          - arch: arm64
            php: '5.6'
          - arch: arm64
            php: '7.0'
          - arch: arm64
            php: '7.1'
          - arch: arm64
            php: '7.2'
          - arch: arm64
            php: '7.3'
          - arch: arm64
            php: '7.4'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          path: php-agent
      - name: Enable arm64 emulation
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install arm64
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Determine if valgrind can be used
        id: get-check-variant
        run: |
          if [[ ${{ matrix.platform }} = 'gnu' && ${{matrix.arch}} = 'amd64' ]]; then
            echo "AXIOM_CHECK_VARIANT=valgrind" >> $GITHUB_OUTPUT
          else
            echo "AXIOM_CHECK_VARIANT=check" >> $GITHUB_OUTPUT
          fi
          if [[ ${{matrix.arch}} = 'arm64' ]]; then
            echo "AGENT_CHECK_VARIANT=check" >> $GITHUB_OUTPUT
          elif [[ ${{ matrix.platform }} = 'gnu' ]]; then
            echo "AGENT_CHECK_VARIANT=valgrind" >> $GITHUB_OUTPUT
          elif [[ ${{matrix.php}} = '5.5' || ${{matrix.php}} = '5.6' || ${{matrix.php}} = '7.0' || ${{matrix.php}} = '7.1' ]]; then
            echo "AGENT_CHECK_VARIANT=check" >> $GITHUB_OUTPUT
          else 
            echo "AGENT_CHECK_VARIANT=valgrind" >> $GITHUB_OUTPUT
          fi
      - name: Build axiom
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION make axiom 
      - name: Build agent
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION make agent
      - name: Build axiom unit tests
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION make axiom-tests
      - name: Run axiom unit tests
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION make axiom-${{ steps.get-check-variant.outputs.AXIOM_CHECK_VARIANT }}
      - name: Build agent unit tests
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION make agent-tests
      - name: Run agent unit tests
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION make agent-${{ steps.get-check-variant.outputs.AGENT_CHECK_VARIANT }}
