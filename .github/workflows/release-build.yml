#
# Copyright 2020 New Relic Corporation. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

#
# This is the workflow to do a release build.
#
name: release_CI

#
# Control when the action will run. 
#
on:
  #
  # Run this workflow manually from the Actions tab or using the API
  #
  workflow_dispatch:
    inputs:
      build-number:
        description: 'Build number for agent version'
        required: true
        type: string

jobs:
  daemon_release:
    env:
      IMAGE_NAME: newrelic/nr-php-agent-builder
      IMAGE_TAG: make-go
      IMAGE_VERSION: v1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [gnu, musl]
        arch: [amd64]
    steps:
      - name: Checkout newrelic-php-agent code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.ref }}
          path: newrelic-php-agent
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build daemon
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/newrelic-php-agent":"/usr/local/src/newrelic-php-agent"
          -e USE_SYSTEM_CERTS=1
          -e BUILD_NUMBER=${{inputs.build-number}}
          $IMAGE_NAME:$IMAGE_TAG-${{ matrix.platform }}-$IMAGE_VERSION release-daemon
      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          path: newrelic-php-agent/releases
          name: release-from-gha-${{ matrix.platform }}-${{ matrix.arch }}
          if-no-files-found: error
  agent_release:
    env:
      IMAGE_NAME: newrelic/nr-php-agent-builder
      IMAGE_VERSION: v1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [gnu, musl]
        php_ver: ['8.2']
        arch: [amd64]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.ref }}
          path: newrelic-php-agent
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/newrelic-php-agent":"/usr/local/src/newrelic-php-agent"
          -e OPTIMIZE=1
          -e PCRE_STATIC=yes
          -e BUILD_NUMBER=${{inputs.build-number}}
          $IMAGE_NAME:agent-builder-php${{matrix.php_ver}}-${{matrix.platform}}-$IMAGE_VERSION release-${{matrix.php_ver}}-gha
      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          path: newrelic-php-agent/releases
          name: release-from-gha-${{ matrix.platform }}-${{ matrix.arch }}
          if-no-files-found: error
      - name: Create release tags for K8s Init Containers
        run: |
          RELEASE_TITLE="New Relic PHP Agent ${GITHUB_REF_NAME}.0"
          RELEASE_TAG="${GITHUB_REF_NAME}.0_php"
          RELEASE_NOTES="Automated release for [PHP Agent ${GITHUB_REF_NAME}](https://github.com/newrelic/newrelic-php-agent/releases/tag/${GITHUB_REF_NAME})"
          gh auth login --with-token <<< $GH_RELEASE_TOKEN
          echo "newrelic/newrelic-agent-init-container - Releasing \"${RELEASE_TITLE}\" with tag ${RELEASE_TAG}"
          gh release create "${RELEASE_TAG}" --title="${RELEASE_TITLE}" --repo=newrelic/newrelic-agent-init-container --notes="${RELEASE_NOTES}"
        env:
          GH_RELEASE_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
