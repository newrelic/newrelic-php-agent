#
# Copyright 2020 New Relic Corporation. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

#
# This is the workflow to do a release build.
#
name: release_CI

#
# Control when the action will run. 
#
on:
  #
  # Run this workflow manually from the Actions tab or using the API
  #
  workflow_dispatch:

jobs:
  agent_release:
    env:
      PHP_VER: ${{ matrix.php_ver }}
      ARCH: ${{ matrix.arch }}
      BUILD_TYPE: release
      OS: ${{ matrix.os }}
      image_name: ${{ matrix.os }}:${{ matrix.php_ver }}${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux]
        php_ver: ['8.0', '8.0-zts']
        arch: [x64, x86]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Build Custom Docker Image
        run: docker build --build-arg ARCH=$ARCH --build-arg PHP_VER=$PHP_VER --build-arg BUILD_TYPE=$BUILD_TYPE -f ./.github/docker/${OS}/${ARCH}/Dockerfile -t $image_name .
      - name: Build and Test
        run: docker run --name runtest --workdir /github/workspace --rm -e GITHUB_WORKSPACE -e GITHUB_ENV -v "${GITHUB_WORKSPACE}":"/github/workspace" $image_name
      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.php_ver }}binaries
          path: releases
          if-no-files-found: error
  combine:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Combine artifacts from matrix build
    needs: agent_release
    steps:
      - name: Create directory
        run: mkdir releases
      - name: Download to directory
        uses: actions/download-artifact@v2
        with:
          path: releases
      - run: sudo apt install tree
      - run: tree
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: $GITHUB_SHA
          path: releases
          if-no-files-found: error
